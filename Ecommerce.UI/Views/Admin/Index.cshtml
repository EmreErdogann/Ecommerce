@model Ecommerce.Core.DTos.ProductDTos.ProductListDto

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="card mb-4 mt-3 ">
    <div class="card-header">
        <i class="fas fa-table mr-1"></i>
        Ürünler
    </div>
    <div id="modelPlaceHolder" aria-hidden="true"></div>
    <div class="card-body">
        <div class="spinner-border" role="status" style="display:none;">
            <span class="sr-only">Yükleniyor...</span>
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-hover" id="productTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Ürün Adı</th>
                        <th>Ürün Resim</th>
                        <th>Ürün Fiyat</th>
                        <th>Ürün Kategori</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>Id</th>
                        <th>Ürün Adı</th>
                        <th>Ürün Resim</th>
                        <th>Ürün Fiyat</th>
                        <th>Ürün Kategori</th>
                        <th>İşlemler</th>
                    </tr>
                </tfoot>
                <tbody>
                    @foreach (var product in Model.Product)
                    {
                        <tr name="row @product.Id">
                            <td>@product.Id</td>
                            <td>@product.Name</td>
                            <td>@product.ImageUrl</td>
                            <td>@product.Price</td>
                            <td>@product.Category.Name</td>

                            <td>
                                <button class="btn btn-primary btn-sm"><span class="fas fa-edit"></span>Düzenle</button>
                                <button class="btn btn-danger btn-sm btn-delete" data-id="@product.Id"><span class="fas fa-minus-circle"></span>Sil</button>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        $(document).ready(function() {

            $('#productTable').DataTable({
                dom:
                    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                buttons: [
                    {
                        text: 'Ekle',
                        attr: {
                            id: "btnAdd",
                        },
                        className: 'btn btn-success',
                        action: function (e, dt, node, config) {

                        }
                    },
                    {
                        text: 'Yenile',
                        className: 'btn btn-warning',
                        action: function (e, dt, node, config) {
                              $.ajax({
                                type: 'GET',
                                url: '@Url.Action("GetAllProduct", "Admin")',
                                contentType: "application/json",
                                beforeSend: function () {
                                    $('#productTable').hide();
                                    $('.spinner-border').show();
                                },
                                success: function (data) {
                                    const productListDto = jQuery.parseJSON(data);


                                    if (productListDto.ResultStatus === 0) {
                                        let tableBody = "";
                                        $.each(productListDto.Product.$values, function (index, category) {

                                            tableBody += `<tr>
                                      <td>${productListDto.Product.$values[index].Id}</td>
                                      <td>${productListDto.Product.$values[index].Name}</td>
                                      <td>${productListDto.Product.$values[index].ImageUrl}</td>
                                      <td>${productListDto.Product.$values[index].Price}</td>
                                      <td>${productListDto.Product.$values[index].Category.Name}</td>
                             <td>
                                <button class="btn btn-primary btn-sm"><span class="fas fa-edit"></span>Düzenle</button>
                                <button class="btn btn-danger btn-sm btn-delete" data-id="${productListDto.Product.$values[index].Id}"><span class="fas fa-minus-circle"></span>Sil</button>
                            </td>
                                                              </tr>`
                                        });
                                        $('#productTable > tbody ').replaceWith(tableBody);
                                        $('.spinner-border').hide();
                                        $('#productTable').fadeIn(1000);

                                    }
                                    else {
                                        toastr.error(`${productListDto.Message}`, 'İşlem Başarısız!');

                                    }
                                },
                                error: function (err) {
                                    console.log(err);
                                    toastr.error(`${err.responseText}`, 'Hata!');

                                }
                            });
                        }

                    }
                ],
                language: {
                    "sDecimal": ",",
                    "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                    "sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "sInfoEmpty": "Kayıt yok",
                    "sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Sayfada _MENU_ kayıt göster",
                    "sLoadingRecords": "Yükleniyor...",
                    "sProcessing": "İşleniyor...",
                    "sSearch": "Ara:",
                    "sZeroRecords": "Eşleşen kayıt bulunamadı",
                    "oPaginate": {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "Sonraki",
                        "sPrevious": "Önceki"
                    },
                    "oAria": {
                        "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                        "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                    },
                    "select": {
                        "rows": {
                            "_": "%d kayıt seçildi",
                            "0": "",
                            "1": "1 kayıt seçildi"
                        }
                    }
                }
            });

            $(function() {
                const url = '@Url.Action("Add", "Admin")';
                const placeHolderDiv = $('#modalPlaceHolder');
                $('#btnAdd').click(function() {
                    $.get(url).done(function(data) {
                        placeHolderDiv.html(data);
                        placeHolderDiv.find(".modal").modal('show');
                    });
                });

                placeHolderDiv.on('click',
                    '#btnSave',
                    function(event) {
                        event.preventDefault();
                        const form = $('#form-product-add');
                        const actionUrl = form.attr('action');
                        const dataToSend = form.serialize();
                        $.post(actionUrl, dataToSend).done(function(data) {
                            console.log(data);
                            const productAddAjaxModel = jQuery.parseJSON(data);
                            console.log(productAddAjaxModel);
                            const newFormBody = $('.modal-body', productAddAjaxModel._UrunAddPartial);
                            placeHolderDiv.find('.modal-body').replaceWith(newFormBody);
                            const isValid = newFormBody.find('[name="IsValid"]').val() === 'True';
                            if (isValid) {
                                placeHolderDiv.find('.modal').modal('hide');
                                const newTableRow = `
                                <tr>
                                                    <td>${productAddAjaxModel.ProductDto.Product.Id}</td>
                                                    <td>${productAddAjaxModel.ProductDto.Product.Name}</td>
                                                    <td>${productAddAjaxModel.ProductDto.Product.ImageUrl}</td>
                                                    <td>${productAddAjaxModel.ProductDto.Product.Price}</td>
                                                    <td>${productAddAjaxModel.ProductDto.Category.Name}</td>

                                                </tr>`;
                                const newTableRowObject = $(newTableRow);
                                newTableRowObject.hide();
                                $('#productTable').append(newTableRowObject);
                                newTableRowObject.fadeIn(3500);
                                toastr.success(`${productAddAjaxModel.ProductDto.Message}`, 'Başarılı İşlem!');
                            } else {
                                let summaryText = "";
                                $('#validation-summary > ul > li').each(function() {
                                    let text = $(this).text();
                                    summaryText = `*${text}\n`;
                                });
                                toastr.warning(summaryText);
                            }
                        });
                    });
            });
            $(document).on('click',
                '.btn-delete',
                function(event) {
                    event.preventDefault();
                    const id = $(this).attr('data-id');
                    Swal.fire({
                        title: 'Silmek istediğinize emin misiniz?',
                        text: "Seçili kategori silinicektir!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, silmek istiyorum.',
                        cancelButtonText: 'Hayır, silmek istemiyorum.'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                type: 'POST',
                                dataType: 'json',
                                data: { productId: id },
                                url: '@Url.Action("Delete", "Admin")',
                                success: function(data) {
                                    const result = jQuery.parseJSON(data);
                                    if (result.ResultStatus === 0) {
                                        Swal.fire(
                                            'Silindi!',
                                            'Seçili ürün başarıyla silinmiştir.',
                                            'success'
                                        );
                                        const tableRow = $(`[name="${id}"]`);
                                        tableRow.fadeOut(3500);
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Bir hata oluştu!',
                                            text: `${result.Message}`,
                                        });
                                    }
                                },
                                error: function(err) { console.log(err); }
                            })
                        }
                    })
                });
        });
    </script>
}


